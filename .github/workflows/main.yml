name: CI

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_SSLMODE: ${{ secrets.DB_SSLMODE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List files
        run: ls -R  # Verify if the .csproj files are present

      - name: List Root Directory
        run: ls -al  # List all files in the root directory

      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.x'

      - name: DotNet Restore
        run: dotnet restore 'DealmatePocNew.sln'  # Restore using the solution file

      - name: DotNet Build
        run: dotnet build 'DealmatePocNew.sln' --configuration Release

      - name: DotNet Publish
        run: dotnet publish 'DealmateApi/DealmateApi.csproj' --configuration Release --output ${{ github.workspace }}/api

      - name: Install EF Core Tools Locally
        run: |
          dotnet new tool-manifest --force
          dotnet tool install dotnet-ef --version 8.0.0

      - name: Apply EF Core Migrations
        run: |
          dotnet ef database update --project 'DealmateApi/DealmateApi.csproj' --connection "Host=${{ secrets.DB_HOST }};Database=${{ secrets.DB_NAME }};Username=${{ secrets.DB_USER }};Password=${{ secrets.DB_PASSWORD }};SslMode=${{ secrets.DB_SSLMODE }};"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ui/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('ui/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: action-yarn
        # You may pin to the exact commit or the version.
        # uses: comchangs/action-yarn@e4a1f4800849aa2e73dbc77d872a3c011cdc28d5
        uses: comchangs/action-yarn@v0.1-beta
          
      - name: Run Jest tests
        run: yarn test:ci
        working-directory: './ui'

      - name: Move UI Build to Drop Folder
        run: |
          mkdir -p ${{ github.workspace }}/ui
          cp -R ui/build/* ${{ github.workspace }}/ui/

      - name: Publish Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: drop
          path: ${{ github.workspace }}

      - name: DotNet Test
        run: dotnet test 'DealmateUnitTest/DealmateUnitTest.csproj'

name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_SSLMODE: ${{ secrets.DB_SSLMODE }}

    steps:
    # Checkout the code
    - uses: actions/checkout@v3

    # Setup .NET Core SDK
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    # Restore .NET dependencies
    - name: DotNet Restore
      run: dotnet restore '**/*.csproj'

    # Build .NET projects
    - name: DotNet Build
      run: dotnet build '**/*.csproj' --configuration Release

    # Build the React UI
    - name: Install and Build UI
      run: |
        npm install
        npm run build
      working-directory: 'ui'

    # Copy React UI build files to the drop folder
    - name: Copy UI Files to Drop
      run: cp -r ui/build/* ${{ github.workspace }}/drop/ui/

    # Publish the .NET API project to the drop folder
    - name: DotNet Publish
      run: dotnet publish '**/*.csproj' --configuration Release --output ${{ github.workspace }}/drop/api

    # Apply EF Core migrations (if needed)
    - name: Apply EF Core Migrations
      run: |
        dotnet tool install dotnet-ef --version 8.0.0 --global
        dotnet ef database update --project './DealmateApi/DealmateApi.csproj' --connection "Host=${{ secrets.DB_HOST }};Database=${{ secrets.DB_NAME }};Username=${{ secrets.DB_USER }};Password=${{ secrets.DB_PASSWORD }};SslMode=${{ secrets.DB_SSLMODE }};"
      env:
        PATH: ${{ github.workspace }}/.dotnet/tools:${{ env.PATH }}

    # Publish the artifacts
    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: drop
        path: drop/

    # Run Unit Tests
    - name: Run Unit Tests
      run: dotnet test '*/DealmateUnitTest.csproj'
